[tool.poetry]
name = "giza-osiris"
version = "0.1.1"
description = "Osiris is a Python library designed for efficient data conversion and management, primarily transforming data into Cairo programs"
authors = ["Fran Algaba <fran@gizatech.xyz>"]
readme = "README.md"
packages = [{include = "osiris"}]

[tool.poetry.dependencies]
python = "^3.11"
numpy = "^1.26.2"
typer = {extras = ["all"], version = "^0.9.0"}
polars = {extras = ["pyarrow"], version = "^0.19.16"}
pandas = "^2.1.3"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.5.0"
black = "^23.11.0"
isort = {extras = ["pyproject"], version = "^5.12.0"}
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
mypy = "^1.7.1"
ruff = "^0.1.6"
lazydocs = "^0.4.8"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
osiris = "osiris.app:app"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 88

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
